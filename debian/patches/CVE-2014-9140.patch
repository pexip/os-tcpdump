Backport of:

From 0f95d441e4b5d7512cc5c326c8668a120e048eda Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Wed, 22 Oct 2014 12:31:21 -0700
Subject: [PATCH] Do bounds checking when unescaping PPP.

Clean up a const issue while we're at it.
---
 print-ppp.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

Index: tcpdump-4.5.1/print-ppp.c
===================================================================
--- tcpdump-4.5.1.orig/print-ppp.c	2014-12-03 16:36:08.627581916 -0500
+++ tcpdump-4.5.1/print-ppp.c	2014-12-03 16:37:10.948111983 -0500
@@ -1266,11 +1266,15 @@
 static void
 ppp_hdlc(const u_char *p, int length)
 {
-	u_char *b, *s, *t, c;
+	u_char *b, *t, c;
+	const u_char *s;
 	int i, proto;
 	const void *se;
 
-	b = (u_int8_t *)malloc(length);
+         if (length <= 0)
+                 return;
+ 
+	b = (u_char *)malloc(length);
 	if (b == NULL)
 		return;
 
@@ -1279,14 +1283,13 @@
 	 * Do this so that we dont overwrite the original packet
 	 * contents.
 	 */
-	for (s = (u_char *)p, t = b, i = length; i > 0; i--) {
+	for (s = p, t = b, i = length; i > 0 && TTEST(*s); i--) {
 		c = *s++;
 		if (c == 0x7d) {
-			if (i > 1) {
-				i--;
-				c = *s++ ^ 0x20;
-			} else
-				continue;
+			if (i <= 1 || !TTEST(*s))
+				break;
+			i--;
+			c = *s++ ^ 0x20;
 		}
 		*t++ = c;
 	}
