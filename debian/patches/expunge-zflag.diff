--- a/tcpdump.c
+++ b/tcpdump.c
@@ -226,7 +226,6 @@
 #endif
 static int Wflag;			/* recycle output files after this number of files */
 static int WflagChars;
-static char *zflag = NULL;		/* compress each savefile using a specified command (like gzip or bzip2) */
 static int timeout = 1000;		/* default timeout = 1000 ms = 1 s */
 #ifdef HAVE_PCAP_SET_IMMEDIATE_MODE
 static int immediate_mode;
@@ -1872,10 +1871,6 @@
 			}
 			break;
 #endif
-		case 'z':
-			zflag = optarg;
-			break;
-
 		case 'Z':
 			username = optarg;
 			break;
@@ -2535,7 +2530,7 @@
 	}
 
 #ifdef HAVE_CAPSICUM
-	cansandbox = (VFileName == NULL && zflag == NULL);
+	cansandbox = (VFileName == NULL);
 #ifdef HAVE_CASPER
 	cansandbox = (cansandbox && (ndo->ndo_nflag || capdns != NULL));
 #else
@@ -2796,59 +2791,6 @@
 	infoprint = 0;
 }
 
-#if defined(HAVE_FORK) || defined(HAVE_VFORK)
-#ifdef HAVE_FORK
-#define fork_subprocess() fork()
-#else
-#define fork_subprocess() vfork()
-#endif
-static void
-compress_savefile(const char *filename)
-{
-	pid_t child;
-
-	child = fork_subprocess();
-	if (child == -1) {
-		fprintf(stderr,
-			"compress_savefile: fork failed: %s\n",
-			pcap_strerror(errno));
-		return;
-	}
-	if (child != 0) {
-		/* Parent process. */
-		return;
-	}
-
-	/*
-	 * Child process.
-	 * Set to lowest priority so that this doesn't disturb the capture.
-	 */
-#ifdef NZERO
-	setpriority(PRIO_PROCESS, 0, NZERO - 1);
-#else
-	setpriority(PRIO_PROCESS, 0, 19);
-#endif
-	if (execlp(zflag, zflag, filename, (char *)NULL) == -1)
-		fprintf(stderr,
-			"compress_savefile: execlp(%s, %s) failed: %s\n",
-			zflag,
-			filename,
-			pcap_strerror(errno));
-#ifdef HAVE_FORK
-	exit(S_ERR_HOST_PROGRAM);
-#else
-	_exit(S_ERR_HOST_PROGRAM);
-#endif
-}
-#else  /* HAVE_FORK && HAVE_VFORK */
-static void
-compress_savefile(const char *filename)
-{
-	fprintf(stderr,
-		"compress_savefile failed. Functionality not implemented under your system\n");
-}
-#endif /* HAVE_FORK && HAVE_VFORK */
-
 static void
 dump_packet_and_trunc(u_char *user, const struct pcap_pkthdr *h, const u_char *sp)
 {
@@ -2896,12 +2838,6 @@
 			pcap_dump_close(dump_info->pdd);
 
 			/*
-			 * Compress the file we just closed, if the user asked for it
-			 */
-			if (zflag != NULL)
-				compress_savefile(dump_info->CurrentFileName);
-
-			/*
 			 * If Cflag is also set, use Gflag as backstop timer.
 			 * If not using Cflag, check to see if we've exceeded the Wflag.
 			 */
@@ -3000,13 +2936,6 @@
 			pcap_dump_close(dump_info->pdd);
 
 			/*
-			 * Compress the file we just closed, if the user
-			 * asked for it.
-			 */
-			if (zflag != NULL)
-				compress_savefile(dump_info->CurrentFileName);
-
-			/*
 			 * Special case Wflag == 1 and stop without further iteration.
 			 */
 			if (Wflag == 1) {
@@ -3233,5 +3162,5 @@
 "\t\t[ --time-stamp-precision precision ] [ --micro ] [ --nano ]\n");
 #endif
 	(void)fprintf(f,
-"\t\t[ -z postrotate-command ] [ -Z user ] [ expression ]\n");
+"\t\t[ -Z user ] [ expression ]\n");
 }
