Description: RPKI to Router Protocol: Fix Segmentation Faults and other problems.
                 - Fix/add ND_TCHECK2 tests,
                 - Fix a buffer overflow,
                 - Remove a debug printf
Origin: backport, https://github.com/the-tcpdump-group/tcpdump/commit/fb6e5377f392555b8c725f66b8b701f0061a3695

Index: tcpdump-4.5.1/print-rpki-rtr.c
===================================================================
--- tcpdump-4.5.1.orig/print-rpki-rtr.c	2015-04-24 13:00:14.474590178 -0400
+++ tcpdump-4.5.1/print-rpki-rtr.c	2015-04-24 13:01:07.579134778 -0400
@@ -184,7 +184,7 @@
     pdu_header = (rpki_rtr_pdu *)tptr;
     pdu_type = pdu_header->pdu_type;
     pdu_len = EXTRACT_32BITS(pdu_header->length);
-    TCHECK2(tptr, pdu_len);
+    TCHECK2(*tptr, pdu_len);
     hexdump = FALSE;
 
     printf("%sRPKI-RTRv%u, %s PDU (%u), length: %u",
@@ -261,6 +261,7 @@
 
 	    pdu = (rpki_rtr_pdu_error_report *)tptr;
 	    encapsulated_pdu_length = EXTRACT_32BITS(pdu->encapsulated_pdu_length);
+	    TCHECK2(*tptr, encapsulated_pdu_length);
 	    tlen = pdu_len;
 
 	    error_code = EXTRACT_16BITS(pdu->pdu_header.u.error_code);
@@ -293,9 +294,10 @@
 		tptr += 4;
 		tlen -= 4;
 	    }
+	    TCHECK2(*tptr, text_length);
 	    if (text_length && (text_length <= tlen )) {
 		memcpy(buf, tptr, MIN(sizeof(buf)-1, text_length));
-		buf[text_length] = '\0';
+		buf[min(sizeof(buf) - 1, text_length)] = '\0';
 		printf("%sError text: %s", indent_string(indent+2), buf);
 	    }
 	}
@@ -342,13 +344,13 @@
 	pdu_header = (rpki_rtr_pdu *)tptr;
         pdu_type = pdu_header->pdu_type;
         pdu_len = EXTRACT_32BITS(pdu_header->length);
+	TCHECK2(*tptr, pdu_len);
 
         /* infinite loop check */
         if (!pdu_type || !pdu_len) {
             break;
         }
 
-        TCHECK2(*tptr, pdu_len);
         if (tlen < pdu_len) {
             goto trunc;
         }
